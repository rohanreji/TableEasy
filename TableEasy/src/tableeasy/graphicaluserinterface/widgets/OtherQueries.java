/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package tableeasy.graphicaluserinterface.widgets;

import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Box;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import tableeasy.OracleDatabaseConnection;
import static tableeasy.graphicaluserinterface.widgets.MainTabbedPane._startpage_panel;
import static tableeasy.graphicaluserinterface.widgets.MainTabbedPane.q;
import static tableeasy.graphicaluserinterface.widgets.MainTabbedPane.rwcnt;
import static tableeasy.graphicaluserinterface.widgets.TableCreationBox._col_no;
import static tableeasy.graphicaluserinterface.widgets.TableCreationBox._table_name;
import tableeasy.graphicaluserinterface.widgets.maintabbedpane.TableDetails;

/**
 *
 * @author Rohan
 */
public class OtherQueries extends javax.swing.JFrame {

    /**
     * Creates new form OtherQueries
     */
    public OtherQueries() {
      
        initComponents();
        
        setTitle("Queries");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        insert = new javax.swing.JButton();
        _table_name = new javax.swing.JTextField();
        update = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${defaultCloseOperation}"), this, org.jdesktop.beansbinding.BeanProperty.create("defaultCloseOperation"));
        bindingGroup.addBinding(binding);

        insert.setText("INSERT INTO");
        insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertActionPerformed(evt);
            }
        });

        _table_name.setText("Enter Table Name");
        _table_name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                _table_nameMouseClicked(evt);
            }
        });
        _table_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _table_nameActionPerformed(evt);
            }
        });

        update.setText("UPDATE");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        jButton1.setText("SELECT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("ADD COLOUMN");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("DROP");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("DROP COLOUMN");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("MODIFY COLOUMN");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(_table_name, javax.swing.GroupLayout.PREFERRED_SIZE, 555, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(insert, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jButton2)
                        .addGap(42, 42, 42)
                        .addComponent(jButton4)
                        .addGap(39, 39, 39)
                        .addComponent(jButton5)))
                .addContainerGap(87, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addComponent(_table_name, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insert)
                    .addComponent(jButton1)
                    .addComponent(update)
                    .addComponent(jButton3))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jButton2))
                .addContainerGap(138, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        try {
            // TODO add your handling code here:
         // new MyTableApp().setLocationRelativeTo(null);
        Statement stmt;              
                                                   
    OracleDatabaseConnection conn=new OracleDatabaseConnection();
                  Connection connector=conn.checkLogin(conn.hostn,conn.portn,conn.databasen,conn.usern,conn.passn);
                                               stmt = connector.createStatement();
                                String squery="select * from tablesr where dbname='"+tableeasy.MainActivity.databases[tableeasy.MainActivity.selecteddata]+"'";
                                System.out.println(tableeasy.MainActivity.databases[tableeasy.MainActivity.selecteddata]);
                                            ResultSet rs = stmt.executeQuery(squery);
                                             ResultSetMetaData metaData1 = rs.getMetaData();
                                             int f=0;
                                             int count=1;
                                            while(rs.next())
                                            {
                                                System.out.println(rs.getString(metaData1.getColumnName(1)));
                                                if(_table_name.getText().equals(rs.getString(metaData1.getColumnName(1))))
                                                {
                                                        f=1;
                                                        Statement stnew=OracleDatabaseConnection.connect.createStatement();
                                                         stnew.executeUpdate("update tablesr set recentlyused=recentlyused+1 where tablename='"+_table_name.getText()+"'");
                                                }
                                                count++;
                                            }
                                            System.out.println("ooopp:"+f);
                                            if(f==0)
                                            {
                                                
                                                JOptionPane.showMessageDialog(null,"NO SUCH TABLE");
                                            }
            else
                                            {
            final JFrame frame=new JFrame();
            frame.setLayout(new FlowLayout(FlowLayout.LEFT));
         
             frame.setSize(700,400);
    final JScrollPane pane;
             frame.setVisible( true );
              frame.setLocationRelativeTo(null);
              final JPanel p=new JPanel();
              final JPanel p1=new JPanel();
              p1.setLayout(new GridBagLayout());
           p.setLayout(new GridBagLayout());
         GridBagConstraints c = new GridBagConstraints();
        
          frame.setLocationRelativeTo(null);
           
              JButton _show=new JButton("SHOW");
             final JTextField [] textfields = new JTextField[5];
             final String[] columnName=new String[100];
            OracleDatabaseConnection conn1=new OracleDatabaseConnection();
                      final Connection con=conn1.checkLogin(conn.hostn,conn.portn,conn.databasen,conn.usern,conn.passn);
                  Statement stat; 
                   DatabaseMetaData dm;
           try{
                dm = con.getMetaData();
             
           
                     final String tname=_table_name.getText();
                     System.out.print(tname);
                             
                     ResultSet rs2;
           
                rs2 = dm.getPrimaryKeys(null, null, tname.toUpperCase());
           
           int var=1;
           
                while(rs2.next()){
    columnName[var] = rs2.getString(4);
     System.out.print(columnName[var]);
     var++;
            }
                final int size=var;
                 for(int i=1;i<var;i++)
          {
              textfields[i]=new JTextField(50);
           c.gridx = 0;
    c.gridy = i;
              p.add(textfields[i],c);
               textfields[i].setVisible(true);
               textfields[i].setText(columnName[i]);
                 textfields[i].setSize(800,30);
                 
                 final int k=i;
                      textfields[i].addMouseListener(new MouseAdapter(){
             @Override
             public void mouseClicked(MouseEvent e){
                    textfields[k].setText("");
                }
                
            });
              
          }
                 c.gridx=0;
                 c.gridy=var;
                 p.add(_show,c);
                   frame.add(p);
                  _show.addActionListener(new ActionListener() {
     
                public void actionPerformed(ActionEvent e) {
                  final int rwcnt;
             
                 final JTextField [] tf = new JTextField[50];
                 final JLabel [] jl =new JLabel[50];
                 
                 final Statement stat1; 
                    try {         
                        p.setVisible(false);
                          final JScrollPane pane = new JScrollPane(p1);
                         frame.add(pane);
                         final JButton updates=new JButton("UPDATE");
                         final JButton deletes =new JButton("DELETE");
                         updates.setVisible(true);
                         deletes.setVisible(true);
                      pane.setVisible(true);                  
                pane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
                        stat1=con.createStatement();
                  
                        String s9="select * from "+tname+" where ";
                        String s10="";
                        for(int i=1;i<size;i++)
                        {
                            s9=s9.concat(columnName[i]);
                            s9=s9+"=";
                            if(!isInteger(textfields[i].getText().trim()))
                            {
                                s10="'"+textfields[i].getText().trim()+"'";
                            }
                            else
                                s10=textfields[i].getText().trim();
                            s9=s9.concat(s10);
                            s9=s9+" and ";
                        }
                         GridBagConstraints c2 = new GridBagConstraints();
                        s9=s9.substring(0, s9.length()-5);
                        final String str=s9;
                        System.out.println(s9);
                     ResultSet rs = stat1.executeQuery(s9);
                   ResultSetMetaData metaData = rs.getMetaData();
                              rwcnt=metaData.getColumnCount(); 
                              while(rs.next())
                                  {
                              for(int i=1;i<=rwcnt;i++)
                              {

                                  jl[i]=new JLabel();
                                   tf[i]=new JTextField(55);
                                    c2.gridx = 0;
    c2.gridy = i;
              p1.add(jl[i],c2);
               jl[i].setVisible(true);
                c2.gridx = 1;
    c2.gridy = i;
              p1.add(tf[i],c2);
               tf[i].setVisible(true);
                                   jl[i].setText(metaData.getColumnName(i));
                                   
                                   tf[i].setText(rs.getString(metaData.getColumnName(i)));
                                   
                              }
                              }
                              c2.gridx=0;
                              c2.gridy=rwcnt+1;
                              frame.add(updates,c2);
                              c2.gridx=1;
                              c2.gridy=rwcnt+1;
                              frame.add(deletes,c2);
                              
                              updates.addActionListener(new ActionListener() {
     
                public void actionPerformed(ActionEvent e) {
                    try {
                        String s11="update "+tname+" set ";
                    Statement st3=con.createStatement();
                    String s13="";
                         ResultSet rs12 = stat1.executeQuery(str);
                         System.out.print(str);
                         String snew;
                       ResultSetMetaData metaData = rs12.getMetaData();
                       while(rs12.next())
                       {
                        for(int i=1;i<=rwcnt;i++)
                        {
                            s13=s13+metaData.getColumnName(i);
                            s13=s13+"=";
                        snew=tf[i].getText().trim();
                        if(snew.contains(":"))
                        {
                   DateFormat inputFormat = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss.S");
                                java.util.Date date = null;
                                try {
                                    date = inputFormat.parse(snew);
                                } catch (ParseException ex) {
                                    Logger.getLogger(OtherQueries.class.getName()).log(Level.SEVERE, null, ex);
                                }

    // Format date into output format
    DateFormat outputFormat = new SimpleDateFormat("dd-MMM-yyyy");
    snew = outputFormat.format(date);
                        }
                            if(!isInteger(snew))
                            {
                                s13=s13+"'"+snew+"'";
                            }
                            else
                                s13=s13+snew;
                           s13=s13+",";
                            
                        }
                        
                        s13=s13.substring(0,s13.length()-1);
                        s11=s11+s13+" where ";
                        s13="";
                        for(int i=1;i<size;i++)
                        {
                            s13=s13+columnName[i];
                            s13=s13+"=";
                            
                            if(!isInteger(textfields[i].getText().trim()))
                            {
                                snew="'"+textfields[i].getText().trim()+"'";
                            }
                            else
                                snew=textfields[i].getText().trim();
                            s13=s13+snew;
                            s13=s13+" and ";
                        }
                        s13=s13.substring(0,s13.length()-5);
                        s11=s11+s13;
                        System.out.println(s11);
                        PreparedStatement updateQuery = con.prepareStatement(s11);
                         updateQuery.executeQuery();
                         frame.dispose();    
                         JOptionPane.showMessageDialog(null,"TABLE ALTERED");
                    }
                    } catch (SQLException ex) {
                        Logger.getLogger(OtherQueries.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(null,"UNABLE TO ALTER");
                    }
                }
                              });          
                               deletes.addActionListener(new ActionListener() {
     
                public void actionPerformed(ActionEvent e) {
                    try {
                        String snew1="delete "+tname+" where ";
                         String s19="";
                         String sn;
                            for(int i=1;i<size;i++)
                            {
                                s19=s19+columnName[i];
                                s19=s19+"=";
                                
                                if(!isInteger(textfields[i].getText().trim()))
                                {
                                    sn="'"+textfields[i].getText().trim()+"'";
                                }
                                else
                                    sn=textfields[i].getText().trim();
                                s19=s19+sn;
                                s19=s19+" and ";
                            }
                            s19=s19.substring(0,s19.length()-5);
                        snew1=snew1+s19;
                          System.out.println(snew1);
                            PreparedStatement updateQuery = con.prepareStatement(snew1);
                             updateQuery.executeQuery();
                             frame.dispose();    
                             JOptionPane.showMessageDialog(null,"ROW DELTED");
                    } catch (SQLException ex) {
                        Logger.getLogger(OtherQueries.class.getName()).log(Level.SEVERE, null, ex);
                          JOptionPane.showMessageDialog(null,"CANNOT DELETED, CHECK FOREIGN KEY");
                    }
                    
                }
                  });
                              
                         } catch (SQLException ex) {
                        Logger.getLogger(OtherQueries.class.getName()).log(Level.SEVERE, null, ex);
                         JOptionPane.showMessageDialog(null,"NOT YET CONNECTED");
                    } 
                   
                }
                
            });
                 
                
           }catch (SQLException ex) {
                Logger.getLogger(OtherQueries.class.getName()).log(Level.SEVERE, null, ex);
            }
          
                                            }
        } catch (SQLException ex) {
            Logger.getLogger(OtherQueries.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updateActionPerformed

    private void _table_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__table_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event__table_nameActionPerformed

    private void insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertActionPerformed
        try {
            // TODO add your handling code here:
    Statement stmt;              
                                               
OracleDatabaseConnection conn=new OracleDatabaseConnection();
              Connection connector=conn.checkLogin(conn.hostn,conn.portn,conn.databasen,conn.usern,conn.passn);
                                           stmt = connector.createStatement();
                            String squery="select * from tablesr where dbname='"+tableeasy.MainActivity.databases[tableeasy.MainActivity.selecteddata]+"'";
                            System.out.println(tableeasy.MainActivity.databases[tableeasy.MainActivity.selecteddata]);
                                        ResultSet rs = stmt.executeQuery(squery);
                                         ResultSetMetaData metaData1 = rs.getMetaData();
                                         int f=0;
                                         int count=1;
                                        while(rs.next())
                                        {
                                            System.out.println(rs.getString(metaData1.getColumnName(1)));
                                            if(_table_name.getText().equals(rs.getString(metaData1.getColumnName(1))))
                                            {
                                                f=1;
                                                   Statement stnew=OracleDatabaseConnection.connect.createStatement();
                                                         stnew.executeUpdate("update tablesr set recentlyused=recentlyused+1 where tablename='"+_table_name.getText()+"'");
                                            }
                                                
                                            count++;
                                        }
                                        System.out.println("ooopp:"+f);
                                        if(f==0)
                                        {
                                            
                                            JOptionPane.showMessageDialog(null,"NO SUCH TABLE");
                                        }
                                        else{
    JFrame frame=new JFrame("INSERT INTO");
JLabel j=new JLabel("");
    frame.setSize(500,400);
      frame.setVisible( true );
             

  // JLabel labeld=new JLabel("");
  JPanel  p=new JPanel();
  p.setLayout(new GridBagLayout());
  GridBagConstraints c = new GridBagConstraints();
   frame.setLocationRelativeTo(null);
      JLabel[] jl=new JLabel[100];
      final JTextField[] jt=new JTextField[100];
   JButton jb=new JButton("INSERT");
         

          //System.out.println(getUsername()+getPassword()+getPort()+getHostname()+getDatabase());
  String s=_table_name.getText();
    
               String s1="select * from ";
               s=s1.concat(s);
              
              System.out.println(s);
                
               if(connector==null)
                    JOptionPane.showMessageDialog(null,"NOT YET CONNECTED");
               
               else
               {
          try {
            
                                         
                      stmt = connector.createStatement();
                                
                                     rs = stmt.executeQuery(s);
                 final ResultSetMetaData metaData = rs.getMetaData();
                  //p.setLayout(new GridLayout(metaData.getColumnCount(),1,3,3));
             final int colcnt=metaData.getColumnCount();
                  for(int i=1;i<=metaData.getColumnCount();i++)
  {
      
     // textfields=new JTextField();

      jl[i]=new JLabel(metaData.getColumnName(i));
      jt[i]=new JTextField();
       jt[i].setPreferredSize(new Dimension(300,20));
                  final int k=i;
       jt[i].setText(metaData.getColumnTypeName(i));
        jt[i].addMouseListener(new MouseAdapter(){
     @Override
     public void mouseClicked(MouseEvent e){
            jt[k].setText("");
        }
        
    });
          // textfields.setName(name+i);
//  JTextField textfields.getname();
//=new JTextField();
     c.gridx = 0;
c.gridy = i;

      p.add(jl[i],c);
   
    c.gridx = 2;
c.gridy = i;
     p.add(jt[i],c);
    //  jl[i].setAlignmentX(LEFT_ALIGNMENT);
     // jt[i].setAlignmentX(LEFT_ALIGNMENT);
      p.add(Box.createVerticalStrut(-10)); 
    jt[i].setVisible(true);
      jl[i].setVisible(true);
     
      
  }
    c.gridx = 2;
c.gridy = metaData.getColumnCount()+4;
  jb.setBounds(150, 200, 200, 200);
    p.add(jb,c);
    JScrollPane pane = new JScrollPane(p); 
                   frame.add(pane);    
                   pane.setVisible(true);
        pane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
jb.addActionListener(new ActionListener(){
    public void actionPerformed(ActionEvent e) {
        
        String s1="insert into "+_table_name.getText()+" values(";
        String s2="";
        String s9="";
        for(int i=1;i<=colcnt;i++)
        {
            s9=jt[i].getText();
            if(!isInteger(s9))
            {
                s9="'"+s9+"'";
               
            }
  
             s2=s2.concat(s9);
           
            s2=s2+",";
        }
        s2=s2.substring(0,s2.length()-1);
        s2=s2+")";
        s1=s1.concat(s2);
        System.out.print(s1);
         OracleDatabaseConnection conn=new OracleDatabaseConnection();
              Connection connector=conn.checkLogin(conn.hostn,conn.portn,conn.databasen,conn.usern,conn.passn);
        try {
            // Statement stmt;
             PreparedStatement statement= connector.prepareStatement(s1);
statement.execute();

JOptionPane.showMessageDialog(null,"VALUE INSERTED");

           /*  ResultSet rs = stmt.executeUpdate(s1);
                      final ResultSetMetaData metaData = rs.getMetaData();*/
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"UNABLE TO INSERT");
            Logger.getLogger(OtherQueries.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
});
                 
          } catch (SQLException ex) {
              Logger.getLogger(OtherQueries.class.getName()).log(Level.SEVERE, null, ex);
          }
               
               } 

               }
        
          
      
  

 
 
 

   
   // For JDK 1.7 or above.
            //frame.getContentPane().revalidate(); // For JDK 1.6 or below.
        } catch (SQLException ex) {
            Logger.getLogger(OtherQueries.class.getName()).log(Level.SEVERE, null, ex);
        }
                
             
            



        
       
                
    }//GEN-LAST:event_insertActionPerformed

    private void _table_nameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event__table_nameMouseClicked
        // TODO add your handling code here:
     
                _table_name.setText("");
         
            
    
    }//GEN-LAST:event__table_nameMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            // TODO add your handling code here:
              Statement stmt;              
                                                   
    OracleDatabaseConnection conn=new OracleDatabaseConnection();
                  Connection connector=conn.checkLogin(conn.hostn,conn.portn,conn.databasen,conn.usern,conn.passn);
                                               stmt = connector.createStatement();
                                String squery="select * from tablesr where dbname='"+tableeasy.MainActivity.databases[tableeasy.MainActivity.selecteddata]+"'";
                                System.out.println(tableeasy.MainActivity.databases[tableeasy.MainActivity.selecteddata]);
                                            ResultSet rs = stmt.executeQuery(squery);
                                             ResultSetMetaData metaData1 = rs.getMetaData();
                                             int f=0;
                                             int count=1;
                                            while(rs.next())
                                            {
                                                System.out.println(rs.getString(metaData1.getColumnName(1)));
                                                if(_table_name.getText().equals(rs.getString(metaData1.getColumnName(1))))
                                                {  f=1;
                                                   Statement stnew=OracleDatabaseConnection.connect.createStatement();
                                                         stnew.executeUpdate("update tablesr set recentlyused=recentlyused+1 where tablename='"+_table_name.getText()+"'");
                                                }
                                                count++;
                                            }
                                            System.out.println("ooopp:"+f);
                                            if(f==0)
                                            {
                                                
                                                JOptionPane.showMessageDialog(null,"NO SUCH TABLE");
                                            }
                                            else
                                            {
            JButton _select_button=new JButton("SELECT");
            final JCheckBox[] jCheckboxArray=new JCheckBox[100]; 
              System.out.println(tableeasy.MainActivity.usernames);
                       
                       
                                 
                       String s2=_table_name.getText().trim();
                       String s1="select * from ";
                       s2=s1.concat(s2);
                      
                      System.out.println(s2);
                        
                       if(connector==null)
                            JOptionPane.showMessageDialog(null,"NOT YET CONNECTED");
                       
                       else
                       {
     
                              try {
                                         
                                                    final JFrame frame1=new JFrame("SELECT COLOUMNS");
    JLabel j=new JLabel("");
        frame1.setSize(500,400);
          frame1.setVisible( true );
                 

      // JLabel labeld=new JLabel("");
      JPanel  p=new JPanel();
      p.setLayout(new GridBagLayout());
      GridBagConstraints c = new GridBagConstraints();
       frame1.setLocationRelativeTo(null);
                                        
                                                
                                                       
                                    stmt = connector.createStatement();
                                    String squery1="select * from tablesr where dbname='"+tableeasy.MainActivity.databases[tableeasy.MainActivity.selecteddata]+"'";
                                             rs = stmt.executeQuery(squery1);
                                                metaData1 = rs.getMetaData();
                                                 int fl=0;
                                                int counter=1;
                                                while(rs.next())
                                                {
                                                    if(_table_name.getText().equals(rs.getString(metaData1.getColumnName(1))))
                                                            fl=1;
                                                    counter++;
                                                }
                                                if(fl==0)
                                                {
                                                    
                                                    JOptionPane.showMessageDialog(null,"NO SUCH TABLE");
                                                }
                                                else{
                                                     rs = stmt.executeQuery(s2);
                               ResultSetMetaData metaData = rs.getMetaData();
                              rwcnt=metaData.getColumnCount();
                               //jCheckboxArray = new javax.swing.JCheckBox[100];
                               System.out.println(rwcnt);
                              
                               for(int i = 1; i<=metaData.getColumnCount();i++)
                               {
                                   System.out.println(metaData.getColumnName(1));
                        jCheckboxArray[i] = new javax.swing.JCheckBox();
        jCheckboxArray[i].setText(metaData.getColumnName(i));
        jCheckboxArray[i].setVisible(true);
        p.add(jCheckboxArray[i]);
                               }
                               p.add(_select_button);
                                  JScrollPane pane = new JScrollPane(p); 
                       frame1.add(pane);    
                       pane.setVisible(true);
            pane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
                               }
                                                _select_button.addActionListener(new ActionListener(){
        public void actionPerformed(ActionEvent e) {
            frame1.dispose();
            
             System.out.println("kko");
                      //System.out.println(getUsername()+getPassword()+getPort()+getHostname()+getDatabase());
                                      OracleDatabaseConnection conn=new OracleDatabaseConnection();
                      Connection connector=conn.checkLogin(conn.hostn,conn.portn,conn.databasen,conn.usern,conn.passn);
                   
                     String[] s = new String[100];
                        String s2=_table_name.getText().trim();
                       String s1="select ";
                        
                      for(int i=1;i<=rwcnt;i++)
                      {
                          
                          if( jCheckboxArray[i].isSelected() )
                          {
                              s[i]=jCheckboxArray[i].getText();
                              s1=s1.concat(s[i]);
                              s1=s1.concat(",");
                              System.out.println(s[i]);
                          }
                          
                      }
                          
                      
                     s1=s1.substring(0,s1.length()-1);
                       s1=s1.concat(" from ");
                      s1=s1.concat(s2);
                      System.out.println(s2);
                        q=s1;
                       if(connector==null)
                            System.out.print("null");
                       
                       else
                       {
                           
                                System.out.print("not null");
                                   System.out.print(q);
                                     TableDetails screen = new TableDetails();
                       
                        screen.display();
                          
                        screen.setLocationRelativeTo(null);
                        screen.setTitle(_table_name.getText());
                        screen.setVisible(true);
                       }
                  
        }
                                                });
        
                                               
                               
                                          } catch (SQLException ex) {
                                               JOptionPane.showMessageDialog(null,"NO SUCH TABLE");
                                              Logger.getLogger(MainTabbedPane.class.getName()).log(Level.SEVERE, null, ex);
                                          }
                              

                       }
                            
                                            }
        } catch (SQLException ex) {
            Logger.getLogger(OtherQueries.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
 Statement stmt;
        try {
          
            
            stmt = OracleDatabaseConnection.connect.createStatement();
            name=_table_name.getText();
              String squery1="select * from tablesr where dbname='"+tableeasy.MainActivity.databases[tableeasy.MainActivity.selecteddata]+"'";
                                             ResultSet rs = stmt.executeQuery(squery1);
                                               ResultSetMetaData metaData1 = rs.getMetaData();
                                                 int fl=0;
                                                int counter=1;
                                                while(rs.next())
                                                {
                                                    if(_table_name.getText().equals(rs.getString(metaData1.getColumnName(1))))
                                                    {        fl=1;
   Statement stnew=OracleDatabaseConnection.connect.createStatement();
                                                         stnew.executeUpdate("update tablesr set recentlyused=recentlyused+1 where tablename='"+_table_name.getText()+"'");                                                    
                                                    }
                                                    counter++;
                                                }
                                                _table_name.getText();
                                                if(fl==0)
                                                {
                                                    
                                                    JOptionPane.showMessageDialog(null,"NO SUCH TABLE");
                                                }
                                                else{
        Addcoloumn ac=new Addcoloumn();
        ac.setVisible(true);
        ac.setLocationRelativeTo(null);}
        } catch (SQLException ex) {
            Logger.getLogger(OtherQueries.class.getName()).log(Level.SEVERE, null, ex);
        }
                                  
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            // TODO add your handling code here:
            Statement st=OracleDatabaseConnection.connect.createStatement();
             st.executeUpdate("drop table "+_table_name.getText());
             st.executeUpdate("delete tablesr where tablename='"+_table_name.getText()+"'");
             JOptionPane.showMessageDialog(null,"Table Droped Succesfully");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"CANNOT DROP!");
            Logger.getLogger(OtherQueries.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        final JFrame f=new JFrame();
        f.setVisible(true);
        f.setTitle("Coloumn Dropper");
        f.setLocationRelativeTo(null);
        f.setSize(500, 200);
        JPanel jp=new JPanel();
        String sq="select * from "+_table_name.getText();
          final JComboBox jc=new JComboBox();
        try {
            Statement st=OracleDatabaseConnection.connect.createStatement();
            ResultSet rs=st.executeQuery(sq);
            ResultSetMetaData metaData=rs.getMetaData();
           int i=1;
           String []s=new String[100];
            while(i<=metaData.getColumnCount())
                
            {
                s[i-1]=metaData.getColumnName(i);
                i++;
            }
          
            jc.setModel(new javax.swing.DefaultComboBoxModel(s));
            jp.add(jc);
            JButton jb=new JButton("drop");
            jp.add(jb);
            f.add(jp);
            jb.addActionListener(new ActionListener(){
        public void actionPerformed(ActionEvent e) {
            f.dispose();
            String sdrop="alter table "+_table_name.getText()+" drop column "+jc.getSelectedItem().toString();
           Statement st1;
            try {
                st1 = OracleDatabaseConnection.connect.createStatement();
                 st1.executeUpdate(sdrop);
            } catch (SQLException ex) {
                Logger.getLogger(OtherQueries.class.getName()).log(Level.SEVERE, null, ex);
            }
           
        }
            });
        } catch (SQLException ex) {
            Logger.getLogger(OtherQueries.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
         final JFrame f=new JFrame();
        f.setVisible(true);
        f.setTitle("Coloumn modifier");
        f.setLocationRelativeTo(null);
        f.setSize(500, 200);
        final JTextField jt1=new JTextField(20);
        final JTextField jt2=new JTextField(20);
        jt1.setText("type");
        jt2.setText("size");
         JPanel jp=new JPanel();
        final JComboBox jc=new JComboBox();
           String sq="select * from "+_table_name.getText();
           String []s=new String[100];
           try {
            Statement st=OracleDatabaseConnection.connect.createStatement();
            ResultSet rs=st.executeQuery(sq);
            ResultSetMetaData metaData=rs.getMetaData();
            int i=1;
          
            while(i<=metaData.getColumnCount())
                
            {
                s[i-1]=metaData.getColumnName(i);
                i++;
            }
              jc.setModel(new javax.swing.DefaultComboBoxModel(s));
        jp.add(jc);
        JButton jb=new JButton("select coloumn");
        jp.add(jb);
        jp.add(jt1);
        JLabel jl=new JLabel("");
        jp.add(jt2);
        jp.add(jl);
        JButton jchange=new JButton("change");
        jp.add(jchange);
        f.add(jp);
        jb.addActionListener(new ActionListener(){
        public void actionPerformed(ActionEvent e) {
            try {
                Statement st=OracleDatabaseConnection.connect.createStatement();
                String sq="select * from "+_table_name.getText();
                ResultSet rs=st.executeQuery(sq);
                ResultSetMetaData metaData=rs.getMetaData();
                jt1.setText(metaData.getColumnTypeName(jc.getSelectedIndex()+1));
            int kl=metaData.getColumnDisplaySize(jc.getSelectedIndex()+1);
            jt2.setText(String.valueOf(kl));
            } catch (SQLException ex) {
                Logger.getLogger(OtherQueries.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }});
        jchange.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                String sq=new String();
                if(jt2.getText().equals("")||jt2.getText().equals(String.valueOf(39)))
                {
                   sq="alter table "+_table_name.getText()+" modify "+jc.getSelectedItem().toString()+" "+jt1.getText();
                }
                else
           sq="alter table "+_table_name.getText()+" modify "+jc.getSelectedItem().toString()+" "+jt1.getText()+"("+jt2.getText()+")";
                try {
                    Statement st=OracleDatabaseConnection.connect.createStatement();
                    st.executeUpdate(sq);
                    f.dispose();
                } catch (SQLException ex) {
                    Logger.getLogger(OtherQueries.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
          }
           catch (SQLException ex) {
            Logger.getLogger(OtherQueries.class.getName()).log(Level.SEVERE, null, ex);
        }
      
    }//GEN-LAST:event_jButton5ActionPerformed
public static boolean isInteger(String s) {
    try { 
        Integer.parseInt(s); 
    } catch(NumberFormatException e) { 
        return false; 
    }
    // only got here if we didn't return false
    return true;
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OtherQueries.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OtherQueries.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OtherQueries.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OtherQueries.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OtherQueries().setVisible(true);
            }
        });
    }
    public static String name;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField _table_name;
    private javax.swing.JButton insert;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton update;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
