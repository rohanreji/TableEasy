




/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package tableeasy.graphicaluserinterface.widgets;

import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Box;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import tableeasy.OracleDatabaseConnection;
import static tableeasy.OracleDatabaseConnection.connect;
import static tableeasy.graphicaluserinterface.widgets.MainTabbedPane.rwcnt;

/**
 *
 * @author Rohan
 */
public class Databases extends javax.swing.JFrame {

    /**
     * Creates new form Databases
     */
    public Databases() {
        initComponents();
         String []s=new String[100];
        try {
            Statement st=OracleDatabaseConnection.connect.createStatement();
            ResultSet rs=st.executeQuery("select distinct dbname from databaser");
           
            int i=0;
            while(rs.next())
            {
                s[i]=rs.getString(1);
                i++;
            }
                } catch (SQLException ex) {
            Logger.getLogger(Databases.class.getName()).log(Level.SEVERE, null, ex);
        }
        
         jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(s));
        setTitle("DATABASE MONITOR");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        databasename1 = new javax.swing.JTextField();
        createbutton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();

        jButton1.setText("jButton1");

        jButton4.setText("jButton4");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        databasename1.setText("Database name");
        databasename1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                databasename1FocusGained(evt);
            }
        });

        createbutton.setText("create");
        createbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createbuttonActionPerformed(evt);
            }
        });

        jButton2.setText("select");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(createbutton)
                        .addGap(0, 309, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(databasename1)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(132, 132, 132)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(databasename1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(createbutton)
                .addGap(18, 18, 18)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void createbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createbuttonActionPerformed
        // TODO add your handling code here:
        String s=databasename1.getText();
     
         OracleDatabaseConnection conn=new OracleDatabaseConnection();
         final Connection connector=conn.checkLogin(conn.hostn,conn.portn,conn.databasen,conn.usern,conn.passn);
            Statement stmt1;              
        int fl=0;
            try {
            stmt1 = connector.createStatement();
                ResultSet rs90 = stmt1.executeQuery("select * from databaser");
                     ResultSetMetaData metaData = rs90.getMetaData();
            
                int d=1;
                             while(rs90.next())
                      {
                          d++;
                          if(databasename1.getText().equals(rs90.getString(metaData.getColumnName(1))))
                          {
                           fl=1;   
                          }
                      }
        } catch (SQLException ex) {
            Logger.getLogger(Databases.class.getName()).log(Level.SEVERE, null, ex);
        }
                                       
                       
                         
         dispose();
         if(fl==0)
         {
         final JFrame f=new JFrame("DATABASE MONITOR");
         
         JLabel n=new JLabel(s);
         JButton jb=new JButton("create with these users");
             
   final JCheckBox[] jl=new JCheckBox[100];
     
   f.setSize(500,400);
          f.setVisible( true );
   
      // JLabel labeld=new JLabel("");
      JPanel  p=new JPanel();
      p.setLayout(new GridBagLayout());
      GridBagConstraints c = new GridBagConstraints();
       f.setLocationRelativeTo(null);
        String s1="select * from ";
                   s=s1.concat("usersr");
                  
                  System.out.println(s);
                  
                  
                   try {
                  Statement stmt;              
                                             
                          stmt = connector.createStatement();
                                    int i=1;
                                          ResultSet rs = stmt.executeQuery(s);
                                          
                                           
                     final ResultSetMetaData metaData = rs.getMetaData();
                      //p.setLayout(new GridLayout(metaData.getColumnCount(),1,3,3));
                 final int colcnt=metaData.getColumnCount();
                 while(rs.next())
                                          {     
                 
          
         // textfields=new JTextField();
 
          jl[i]=new JCheckBox(rs.getString(metaData.getColumnName(1)));
          
             //System.out.println( );
              // textfields.setName(name+i);
  //  JTextField textfields.getname();
    //=new JTextField();
         c.gridx = 0;
c.gridy = i;

          p.add(jl[i],c);
       
        
        //  jl[i].setAlignmentX(LEFT_ALIGNMENT);
         // jt[i].setAlignmentX(LEFT_ALIGNMENT);
          p.add(Box.createVerticalStrut(-10)); 
        
          jl[i].setVisible(true);
         
          i++;
         
      }
          final int ef=i;
         c.gridx = 1;
        c.gridy = i+1;
        jb.setBounds(150, 200, 200, 200);
        p.add(jb,c);
        JScrollPane pane = new JScrollPane(p); 
        f.add(pane);    
        pane.setVisible(true);
        pane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
                  
                    jb.addActionListener(new ActionListener() {
 
            public void actionPerformed(ActionEvent e) {
                try {
                    Statement stmt1;
                                stmt1 = connector.createStatement();
                                          f.dispose();  
                          String s="";
                                ResultSet rs90 = stmt1.executeQuery("select distinct dbname from databaser");
                         int d=1;
                                while(rs90.next())
                               {
                             d++;
                             }
                                System.out.println("sdfsdfs here goes the databaseid::  "+d);
                                int ids=0;
                                Statement stmt = connector.createStatement();
                                       
                                 for(int i=1;i<ef;i++)
                                 {
                         
                         if( jl[i].isSelected() )
                            {
                             try {
                                 s=jl[i].getText();
                                   String snewer="select userid from usersr where username='"+s+"'";
                                                 ResultSet rs = stmt.executeQuery(snewer);
                                                 
                                          while(rs.next())
                                          {
                            final ResultSetMetaData metaData = rs.getMetaData();
                            ids=Integer.parseInt(rs.getString(metaData.getColumnName(1)));
                                          }
                                 System.out.println(ids);
                             } catch (SQLException ex) {
                                 Logger.getLogger(Databases.class.getName()).log(Level.SEVERE, null, ex);
                             }
                              
                   String sqee="insert into databaser values('"+databasename1.getText()+"',"+ef+","+d+","+ids+")";
                     
                      stmt.executeUpdate(sqee);
                     
                   System.out.println(ids);    
                         }
                         
                    
                     }
                } catch (SQLException ex) {
                    Logger.getLogger(Databases.class.getName()).log(Level.SEVERE, null, ex);
                }
       
            }
                  });
                   
                   }
                   catch (SQLException ex) {
                  Logger.getLogger(OtherQueries.class.getName()).log(Level.SEVERE, null, ex);
              }
                   
              /*     try {
                       Statement stmt1;              
                                                
                             stmt1 = connector.createStatement();
                                       
                       
                             ResultSet rs90 = stmt1.executeQuery("select * from usersr");
                      int d=1;
                             while(rs90.next())
                      {
                          d++;
                      }
                            
                       System.out.println(d);
           String sins="insert into databaser values ('"+s+"',"+0+'
            PreparedStatement statement= connect.prepareStatement(sins);
   statement.execute();
     dispose();
     catch (SQLException ex) {
                       
                       JOptionPane.showMessageDialog(null,"Invalid username and password");
                       Logger.getLogger(UserCreation.class.getName()).log(Level.SEVERE, null, ex);
                   }*/
                 
            }
         else
         {
              JOptionPane.showMessageDialog(null,"DATABASE ALREADY EXISTS");
         }
    }//GEN-LAST:event_createbuttonActionPerformed

    private void databasename1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_databasename1FocusGained
        // TODO add your handling code here:
        
        databasename1.setText("");
    }//GEN-LAST:event_databasename1FocusGained

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
         final JFrame f2=new JFrame("DATABASE MONITOR");
         
       
       
             
   final JCheckBox[] jl=new JCheckBox[100];
     
   f2.setSize(500,400);
   f2.setLocationRelativeTo(null);
          f2.setVisible( true );
   
          String s=jComboBox1.getSelectedItem().toString();
      final JCheckBox[] jl1=new JCheckBox[100];
       JPanel  p=new JPanel();
      p.setLayout(new GridBagLayout());
      GridBagConstraints c = new GridBagConstraints();
         OracleDatabaseConnection conn=new OracleDatabaseConnection();
         final Connection connector=conn.checkLogin(conn.hostn,conn.portn,conn.databasen,conn.usern,conn.passn);
            Statement stmt1;              
        int fl=0;
            try {
            stmt1 = connector.createStatement();
                ResultSet rs90 = stmt1.executeQuery("select * from databaser");
                     ResultSetMetaData metaData = rs90.getMetaData();
            
                int d=1;
                             while(rs90.next())
                      {
                          d++;
                          if(jComboBox1.getSelectedItem().toString().equals(rs90.getString(metaData.getColumnName(1))))
                          {
                           fl=1;   
                          
                          }
                           System.out.println("database is there");
                      }
        } catch (SQLException ex) {
            Logger.getLogger(Databases.class.getName()).log(Level.SEVERE, null, ex);
        }
                                       
                       
                         
         dispose();
         if(fl==1)
         {
           
             System.out.println("we are here");
             String snew="select distinct username from usersr where username not in (select distinct username from databaser,usersr where dbname='"+s+"' and databaser.userid=usersr.userid)";
              try {
                  Statement st =OracleDatabaseConnection.connect.createStatement();
                  ResultSet rs=st.executeQuery(snew);
                  int i=0;
                  while(rs.next())
                  {
                      
                         jl1[i]=new JCheckBox(rs.getString(1));
          
             //System.out.println( );
              // textfields.setName(name+i);
  //  JTextField textfields.getname();
    //=new JTextField();
         c.gridx = 0;
c.gridy = i;

          p.add(jl1[i],c);
       
        
        //  jl[i].setAlignmentX(LEFT_ALIGNMENT);
         // jt[i].setAlignmentX(LEFT_ALIGNMENT);
          p.add(Box.createVerticalStrut(-10)); 
        
          jl1[i].setVisible(true);
         
          i++;
           
                  }
                   final int ef1=i;
                  JButton jb1=new JButton("Create with these users");
                     c.gridx = 1;
        c.gridy = i+1;
                    jb1.setBounds(150, 800, 200, 200);
        p.add(jb1,c);
        JScrollPane pane = new JScrollPane(p); 
        f2.add(pane);    
        pane.setVisible(true);
        pane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
          
        
          jb1.addActionListener(new ActionListener() {
 
            public void actionPerformed(ActionEvent e) {
                try {
                    Statement stmt1;
                                stmt1 = connector.createStatement();
                                     f2.dispose();     
                          String s="";
                                ResultSet rs99 = stmt1.executeQuery("select distinct dbid from databaser where dbname='"+jComboBox1.getSelectedItem().toString()+"'");
                         int d=1;
                              while(rs99.next()){
                            d=Integer.parseInt(rs99.getString("dbid"));
                              }
                                System.out.println("sdfsdfs here goes the databaseid::  "+d);
                                int ids=0;
                                Statement stmt = connector.createStatement();
                                       
                                 for(int i=1;i<ef1;i++)
                                 {
                         
                         if( jl1[i].isSelected() )
                            {
                             try {
                                 s=jl1[i].getText();
                                   String snewer="select userid from usersr where username='"+s+"'";
                                                 ResultSet rs = stmt.executeQuery(snewer);
                                                 
                                          while(rs.next())
                                          {
                            final ResultSetMetaData metaData = rs.getMetaData();
                            ids=Integer.parseInt(rs.getString(metaData.getColumnName(1)));
                                          }
                                 System.out.println(ids);
                             } catch (SQLException ex) {
                                 Logger.getLogger(Databases.class.getName()).log(Level.SEVERE, null, ex);
                             }
                              
                   String sqee="insert into databaser values('"+jComboBox1.getSelectedItem().toString()+"',"+ef1+","+d+","+ids+")";
                     
                      stmt.executeUpdate(sqee);
                     
                   System.out.println(ids);    
                         }
                         
                    
                     }
                } catch (SQLException ex) {
                    Logger.getLogger(Databases.class.getName()).log(Level.SEVERE, null, ex);
                }
       
            }
                  });
              } catch (SQLException ex) {
                  Logger.getLogger(Databases.class.getName()).log(Level.SEVERE, null, ex);
              }
                   
             
         }
         
         
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Databases.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Databases.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Databases.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Databases.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Databases().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createbutton;
    private javax.swing.JTextField databasename1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox jComboBox1;
    // End of variables declaration//GEN-END:variables
}
